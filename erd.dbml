Project feedback_system {
  Note: 'Feedback System Database Schema'
}

Table users {
  id varchar [pk]
  email varchar [unique, not null]
  name varchar [not null]
  phone varchar
  password_has varchar [not null]
  avatar varchar
  created_at datetime [default: `CURRENT_TIMESTAMP`]
  updated_at datetime
}

Table files {
  id varchar [pk]
  file_name varchar [not null]
  file_url varchar [not null]
  uploaded_by varchar [not null, ref: > users.id]
  uploaded_at datetime [default: `CURRENT_TIMESTAMP`]
}

Table post_images {
  id varchar [pk]
  post_id varchar [not null, ref: > posts.id]
  image_url varchar [not null]
  created_at datetime [default: `CURRENT_TIMESTAMP`]
}

Table comment_images {
  id varchar [pk]
  comment_id varchar [not null, ref: > comments.id]
  image_url varchar [not null]
  created_at datetime [default: `CURRENT_TIMESTAMP`]
}

Table sessions {
  id varchar [pk]
  user_id varchar [not null, ref: > users.id]
  token varchar [not null]
  device varchar
  ip_address varchar
  user_agent text
  is_active boolean [default: true]
  created_at datetime [default: `CURRENT_TIMESTAMP`]
  last_accessed datetime [default: `CURRENT_TIMESTAMP`]
  expires_at datetime [not null]
}

Table features {
  id varchar [pk]
  title varchar(255)
  description text
  status FEATURE_STATUS
  created_at timestamp
  updated_at timestamp
  user_id varchar [ref: > users.id]
}

Enum FEATURE_STATUS {
  planned
  in_progress
  completed
  rejected
}

Table bug_reports {
  id varchar [pk]
  title varchar(255)
  description text
  status BUG_STATUS
  created_at timestamp
  updated_at timestamp
  user_id varchar [ref: > users.id]
}

Enum BUG_STATUS {
  open
  in_progress
  resolved
  closed
}

Table requests {
  id varchar [pk]
  title varchar(255)
  description text
  type REQUEST_TYPE
  status REQUEST_STATUS
  created_at timestamp
  updated_at timestamp
  user_id varchar [ref: > users.id]
  platform_id varchar [ref: > platforms.id]
}

Enum REQUEST_TYPE {
  feature
  bug
  improvement
}

Enum REQUEST_STATUS {
  submitted
  approved
  rejected
  in_progress
  completed
}

Table votes {
  id varchar [pk]
  user_id varchar [ref: > users.id]
  request_id varchar [ref: > requests.id]
  created_at timestamp
}

Table comments {
  id varchar [pk]
  user_id varchar [ref: > users.id]
  request_id varchar [ref: > requests.id]
  content text
  created_at timestamp
  updated_at timestamp
}

Table activity_log {
  id varchar [pk]
  user_id varchar [ref: > users.id]
  object_type ACTIVITY_OBJECT_TYPE
  object_id varchar
  activity_type ACTIVITY_TYPE
  description text
  created_at timestamp
}

Enum ACTIVITY_OBJECT_TYPE {
  feature
  bug
  request
  comment
}

Enum ACTIVITY_TYPE {
  created
  updated
  deleted
  status_changed
  commented
  voted
}

Table tags {
  id varchar [pk]
  name varchar(255)
}

Table feature_tags {
  feature_id varchar [ref: > features.id]
  tag_id varchar [ref: > tags.id]
  indexes {
    (feature_id, tag_id) [pk]
  }
}

Table bug_tags {
  bug_id varchar [ref: > bug_reports.id]
  tag_id varchar [ref: > tags.id]
  indexes {
    (bug_id, tag_id) [pk]
  }
}

Table request_tags {
  request_id varchar [ref: > requests.id]
  tag_id varchar [ref: > tags.id]
  indexes {
    (request_id, tag_id) [pk]
  }
}

Table platforms {
  id varchar [pk]
  logo varchar(255)
  name varchar(255)
  description text
}

Table changelogs {
  id varchar [pk]
  version varchar(255)
  description text
  release_date datetime
  platform_id varchar [ref: > platforms.id]
}

Table roadmaps {
  id varchar [pk]
  title varchar(255)
  description text
  start_date datetime
  end_date datetime
  platform_id varchar [ref: > platforms.id]
  status ROADMAP_STATUS
  created_at timestamp
  updated_at timestamp
  user_id varchar [ref: > users.id]
  request_id varchar [ref: > requests.id]
}

Enum ROADMAP_STATUS {
  planned
  in_progress
  completed
  cancelled
  on_hold
}
